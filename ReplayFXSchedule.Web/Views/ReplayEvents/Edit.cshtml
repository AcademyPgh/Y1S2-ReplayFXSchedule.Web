@model ReplayFXSchedule.Web.Models.ReplayEvent

@{
    ViewBag.Title = "Edit Event";
}

<h2>Edit Event</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ReplayEvent</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtendedDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtendedDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtendedDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Current Categories</label>
            <div class="col-md-10">
                <div id="ReplayEventTypes" class="form-control"></div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Add Categories</label>
            <div class="col-md-10">
                <div id="ReplayEventAddTypes">
                    <select class="form-control" id="ReplaySelect">
                        <option>DON'T SELECT ME</option>

                    </select>
                    <span id="AddType"><i class="fa fa-plus-circle" aria-hidden="true"></i></span>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index","ReplayEvents", null, new { @class = "replayButton btn btn-default" })
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function UpdateEventTypes() {
            $.ajax({
                url: '/replayevents/gettypes/@Model.Id',
                type: 'get',
                success: function (data) {
                    var html = '';
                    data.map(function (replayEvent) {
                        //html += '<li>' + replayEvent.DisplayName + '<span data-id=' + replayEvent.Id + ' class="DeleteButton btn btn-primary">Delete</span></li>'
                        html += '<li>' + replayEvent.DisplayName + '<span data-id=' + replayEvent.Id + ' class="DeleteButton"><i class="fa fa-times" aria-hidden="true"></i></span></li>'
                    });

                    $('#ReplayEventTypes').html(html);
                    $('.DeleteButton').click(DeleteType);
                }
            });
        }

        function DeleteType()
        {
            console.log('delete type');
            $.ajax({
                url: '/replayevents/removetype/@Model.Id?typeId=' + $(this).attr('data-id'),
                type: 'get',
                success: function () {
                    UpdateEventTypes();
                }
            })
            $(this)
        }

        function SetupEventTypeDropDown() {
            $.ajax({
                url: '/replayevents/GetAllEventTypes',
                type: 'get',
                success: function (data) {
                    data.map(function (replayEvent) {
                        $('#ReplaySelect').append('<option value=' + replayEvent.Id + '>' + replayEvent.DisplayName + '</option');
                    })
                }
            });
        }

        function AddTypeClick() {
            $.ajax({
                url: '/replayevents/addtype/@Model.Id?typeId=' + $('#ReplaySelect').val(),
                type: 'get',
                success: function () {
                    console.log("did I work?");
                    UpdateEventTypes();
                }
            });
        }

        function initialize() {
            UpdateEventTypes();
            SetupEventTypeDropDown();
            $('#AddType').click(AddTypeClick);
        }

        $(initialize);

    </script>
}

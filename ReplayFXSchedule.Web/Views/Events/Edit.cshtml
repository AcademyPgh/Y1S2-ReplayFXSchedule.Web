@model ReplayFXSchedule.Web.Models.Event

@{
    ViewBag.Title = "Edit Event";
}

<div class="card">
    <div class="card-header">
        <h4 class="card-title">Edit Event</h4>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Edit", "Events", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.Partial("_EventForm")
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
        var list = [@ViewBag.EventTypeIDs];
        const listElement = $('#categories');
        listElement.val(list.toString());
        const checkedClass = 'now-ui-icons ui-1_check';
        const displayListElement = $('#EventTypes');

        function loadCategories() {
            $.ajax({
                url: '/api/v2/categories/@ViewBag.ConId',
                type: 'GET',
                success: function (data) {
                    displayListElement.html('');
                    data.map(function (category) {
                        displayListElement.append('<div class="align-middle" id="cat' + category.id + '" data-id=' + category.id + '><span id="catspan' + category.id + '"></span>' + category.name + '</div>');
                        $('#cat' + category.id).click(function () { toggleItem(category.id); });
                        if (list.indexOf(category.id) > -1) {
                            $('#catspan' + category.id).addClass(checkedClass);
                        }
                    });
                }
            })
        }

        var guestList = [@ViewBag.GuestIDs];
        const guestListElement = $('#guests');
        console.log(guestList);
        guestListElement.val(guestList.toString());
        const displayGuestListElement = $('#Guests');

        function loadGuest() {
            $.ajax({
                url: '/api/v2/guests/@ViewBag.ConId',
                type: 'GET',
                success: function (data) {
                    displayGuestListElement.html('');
                    console.log(data);
                    data.map(function (guest) {
                        displayGuestListElement.append('<div class="align-middle" id="guest' + guest.id + '" data-id=' + guest.id + '><span id="guestspan' + guest.id + '"></span>' + guest.name + '</div>');
                        $('#guest' + guest.id).click(function () { toggleGuest(guest.id); });
                        if (guestList.indexOf(guest.id) > -1) {
                            $('#guestspan' + guest.id).addClass(checkedClass);
                        }
                    });
                }
            })
        }

        function toggleItem(id) {
            // if it is not there
            // add it to the list input
            // add the checkmark to the category
            if (!$('#catspan' + id).hasClass(checkedClass)) {
                list.push(id);
                listElement.val(list.toString());
                $('#catspan' + id).addClass(checkedClass);
            }
            // if it is there
            // remove it from the list input
            // remove the checkmark on the category
            else {
                var i = list.indexOf(id);
                list.splice(i, 1);
                listElement.val(list.toString());
                $('#catspan' + id).removeClass(checkedClass);
            }
    }

    function toggleGuest(id) {
        // if it is not there
        // add it to the list input
        // add the checkmark to the category
        if (!$('#guestspan' + id).hasClass(checkedClass)) {
            guestList.push(id);
            guestListElement.val(guestList.toString());
            $('#guestspan' + id).addClass(checkedClass);
            console.log(guestList);
        }
        // if it is there
        // remove it from the list input
        // remove the checkmark on the category
        else {
            var i = guestList.indexOf(id);
            guestList.splice(i, 1);
            guestListElement.val(guestList.toString());
            $('#guestspan' + id).removeClass(checkedClass);
            console.log(guestList);
        }
    }

            $('#delete-image').click(function () {

                var image = $("#Image").val();
                console.log("the value of image is: " + image);
                $('#Image').val('');
                $('#imageUrl').attr('src', '/content/img/400x400.png');
            });
            $('#delete-promoimage').click(function () {

                var promoimage = $("#PromoImage").val();
                console.log("the value of image is: " + promoimage);
                $('#PromoImage').val('');
                $('#promoImageUrl').attr('src', '/content/img/640x170.png');
            });


            function previewfile() {
                //displays a preview version of the image before it is saved to the database
                var preview = document.querySelector('#img-display');
                var file = document.querySelector('input[type=file]').files[0];
                var reader = new FileReader();
                reader.addEventListener("load", function () {
                    preview.src = reader.result;
                }, false);
                if (file) {
                    reader.readAsDataURL(file);
                }
            }


        function initialize() {
            loadCategories();
            loadFormItems();
            loadGuest();
        }

        function loadFormItems() {
            if ($(".datepicker").length != 0) {
                $('.datepicker').datetimepicker({
                    format: 'MM/DD/YYYY',
                    icons: {
                        time: "now-ui-icons tech_watch-time",
                        date: "now-ui-icons ui-1_calendar-60",
                        up: "fa fa-chevron-up",
                        down: "fa fa-chevron-down",
                        previous: 'now-ui-icons arrows-1_minimal-left',
                        next: 'now-ui-icons arrows-1_minimal-right',
                        today: 'fa fa-screenshot',
                        clear: 'fa fa-trash',
                        close: 'fa fa-remove'
                    }
                });
            }

            if ($(".timepicker").length != 0) {
                $('.timepicker').datetimepicker({
                    format: 'HH:mm A',
                    stepping: 5,
                    icons: {
                        time: "now-ui-icons tech_watch-time",
                        date: "now-ui-icons ui-1_calendar-60",
                        up: "fa fa-chevron-up",
                        down: "fa fa-chevron-down",
                        previous: 'now-ui-icons arrows-1_minimal-left',
                        next: 'now-ui-icons arrows-1_minimal-right',
                        today: 'fa fa-screenshot',
                        clear: 'fa fa-trash',
                        close: 'fa fa-remove'
                    }
                });
            }

            $('.fileinput').fileinput()

        }

        $(initialize);
</script>
        }

@model ReplayFXSchedule.Web.Models.ReplayGame

@{
    ViewBag.Title = "Create Replay Games";
}

<h2>Create ReplayFX Games</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal active">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GameTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GameTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GameTitle, "", new { @class = "text-danger" })
                <div class="btn btn-default"id="lookup-game">Lookup Game</div>
            </div>
        </div>
               <div id="games-display">
                   <p>Click on the Correct Game or <span class="btn btn-default" id="clear-games">Clear Games List</span></p>
                   <ul id="games-by-id" class="list-group"></ul>
               </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Overview, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Overview, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Overview, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Developer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Developer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Developer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Players, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Players, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Players, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
                    <label class="control-label col-md-2">Game Types</label>
                      <div class="col-md-10">
                              <select class="form-control" typeof="text" name="gametype" id="gametype">
                                       @foreach (var gametype in ViewBag.ReplayGameTypes) {
                   <option value = "@gametype.Id" label = "@gametype.Name"> @gametype.Name </option>
                                       }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Locations</label>
            <div class="col-md-10"> 
                <div id="ReplayGameLocations" class="form-control"></div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input name="locations" id="locations" type="hidden" />
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index", "ReplayGames", null, new { @class = "replayButton btn btn-default" })
            </div>
        </div>
    </div>
   


}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    locations = [@ViewBag.ReplayGameLocationIDs];

        function load_locations() {
            $.ajax({
                url: '/public/locations',
                type: 'GET',
                success: function (data) {
                    $('#ReplayGameLocations').html('');
                    data.map(function (location) {
                        $('#ReplayGameLocations').append('<li id="cat' + location.Id + '" data-id=' + location.Id + '><span id="catspan' + location.Id + '"></span>' + location.Location + '</li>');
                        $('#cat' + location.Id).click(function () { toggle_location(location.Id); });
                        if (locations.indexOf(location.Id) > -1)
                        { $('#catspan' + location.Id).addClass('fa fa-check');}
                    });
                    //$('#CatList').append('</ul>');
                }
            })
        }

        function toggle_location(id) {
            // if it is not there
            // add the hidden input element
            // add the checkmark to the category
            if (!$('#catspan' + id).hasClass('fa fa-check')) {
                locations.push(id);
                $('#locations').val(locations.toString());
                $('#catspan' + id).addClass('fa fa-check');
            }
            else {

                // if it is there
                // remove the hidden input element
                // remove the checkmark on the category
                var i = locations.indexOf(id);
                locations.splice(i, 1);
                $('#locations').val(locations.toString());
                $('#catspan' + id).removeClass('fa fa-check');
            }
        }
    // 
    //php block ?
       // $url = "your url";
       // $xmlinfo = simplexml_load_file($url);
        // print_r($xmlinfo);

   
        $('#lookup-game').click(function () {
            var gamerequested = $('#GameTitle').val().toLowerCase();
            $('#GameTitle').html('');
            $.ajax({
                url: 'http://cors-anywhere.herokuapp.com/http://thegamesdb.net/api/GetGamesList.php?name=' + gamerequested,
                type: 'GET',
                dataType: 'xml',
                success: function (data) {
                    $('Game', data).each(function () {
                        var id = $(this).find('id').text(),
                         gameTitle = $(this).find('GameTitle').text(),
                         releaseDate = $(this).find('ReleaseDate').text(),
                         platform = $(this).find('Platform').text();
                      //  console.log(id + '-' + gameTitle + '-' + platform);
                        $('#games-by-id').append('<li class="list-group-item" id="game' + id + '" data-id=' + id + '><span id="catspan' + id + '"></span>' + gameTitle + '</br>' + releaseDate + '  ' + platform  + '</li>');
                        $('#game' + id).click(function () { fill_form(id); });
                    })
                },
                error: function (error) {
                    console.log(error);
                }
            });
        })

        $('#clear-games').click(function() {
            $('#games-by-id').empty();})

        function fill_form(id) {
            $('#games-by-id').html('');
            $.ajax({
                url: 'http://cors-anywhere.herokuapp.com/http://thegamesdb.net/api/GetGame.php?id=' + id,
                type: 'GET',
                dataType: 'xml',
                success: function (data) {
                    var gameTitle = $(data).find('GameTitle').text(),
                        overview = $(data).find('Overview').text(),
                        releaseDate = $(data).find('ReleaseDate').text(),
                        developer = $(data).find('Developer').text(),
                        genre = $(data).find('genre').text(),
                        players = $(data).find('Players').text();
                    var tempReleaseDate = new Date(releaseDate);
                    console.log(tempReleaseDate);
                    var releaseYear = tempReleaseDate.getFullYear();
                   console.log(releaseYear);
                    $('#GameTitle').val(gameTitle);
                    $('#Overview').val(overview);
                    $('#ReleaseDate').val(releaseYear);
                    $('#Developer').val(developer);
                    $('#Genre').val(genre);
                    $('#Players').val(players);
                   // console.log(gameTitle + '-' + overview + '-' + genre);
                },
                error: function (error) {
                    console.log(error);
                }
            })
        }

        

        function initialize()
        {
            load_locations();
        }

        $(initialize);
</script>
}



